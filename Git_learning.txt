															Git学习心得
1.Git简介
    git 是目前世界上最先进的分布式版本控制系统。Linus在1991年创建了开源的Linux，经过不断发展，已经成为最大的服务器系统软件。
在2002年以前，世界各地的志愿者把源代码的文件通过diff的方式发给Linus，然后又Linus本人通过手工方式合并代码！
2005年bitmover公司要收回Linux社区的免费使用权。于是Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git!于是Git迅速成为了
最流行的分布式版本控制系统，尤其是2008年GitHub网站上线，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub,包括jQuery，PHP，
Ruby等等。
2.集中式与分布式版本控制系统区别
	集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始
干活，干完活后，再把自己的活推送给中央服务器。集中式版本控制系统最大的毛病就是要在联网的条件下才能工作。CVS及SVN都市集中式版本控制系统
	分布式版本控制系统不必联网，还有强大的分支管理。
3.Git 安装
	Linux系统安装命令：sudo apt-get install git 
老一点的Debian or Ubuntu Linux ,要把命令改为 sudo apt-get install git-core
	Mac OS安装Git：一是安装homebrew，然后通过homebrew安装Git。二是直接从AppStore安装xcode，xcode集成了Git，不过没有默认安装。
	Windows上安装：Windows下使用很多Linux/Unix工具时，需要Cygwin这样的模拟环境。不过配置很复杂。msysgit是Windows版git,http://msysgit.github.io/可以下载。
安装完成后找到 Git Bash，弹出命令式窗口说明安装成功了。
安装完成后需要配置：$ git config --global user.name "yourname"
					$ git config --global user.email "email@example.com"
4.创建版本库
	版本库又名仓库（repository）,可以简单理解为目录，这个目录里的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时候可以跟踪历史，或者
在将来某个时刻可以“还原”。
	$ mkdir learngit
	$ cd learngit
	$ pwd 
	/Users/michael/learn // pwd 命令用于显示当前目录
第二步： 通过git init命令吧这个目录变成git可以管理的仓库：
	$ git init 
	ls -ah 可以看隐藏文件
然后就可以编写文件了，编写的文件一定要放在仓库目录下：
	$ git add readme.txt //添加到暂存区
	$ git commit -m "wrote a readme file"//把暂存区的所有内容提交到当前分支
5.时光穿梭
	$ git status 命令查看当前仓库状态
	$ git diff new.txt命令查看这次版本与上次版本有什么不同。	$ git log 查看历史提交日志
	$ git reset -- hard HEAD^ 回退到上一版本
	$ git reflog 记录你的每一次命令
6.工作区和暂存区
	工作区(Working Directory)：在电脑能看到的文件，比如：learngit就是一工作区
	版本库(Repository):工作库有一个隐藏目录.git ,这个不算工作区，是GIt的版本库。
        我们把文件往Git版本库里添加的时候，是分两步执行的：
    1.用git add命令把文件添加进去，实际上就是把文件修改添加到暂存区；
    2.用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
7.撤销修改
	$ git checkout --file 可以丢弃工作区的修改
	$ git reset head file 可以把暂存区的修改撤销掉	
8.删除文件
	$ git rm 用于删除一个文件。如果一个文件已经被提交到版本库，那么永远不用担心误删，但只能恢复文件到最新版本，会丢弃最新修改。
9.远程仓库
	第一步：创建SSH Key。$ ssh-keygen -t rsa -C "youremail@example.com"
	第二步：登录GItHub，打开Account settings，“SSH key”页面，在Key文本框里粘贴id_rsa.pub文件内容。
10.添加远程库
	要关联一个远程库，使用命令$ git remote add origin git@server-name:path/repo-name.git 
	关联后，使用命令$ git push -u origin master 第一次推送master分支所有内容；
	此后，每次本地提交后，只要有必要，就可以使用命令$git push origin master 推送最新修改。
	分布式版本系统的最大好处之一就是在本地工作完全不需要考虑远程库的存在，也就是没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！
10. 从远程库克隆
	$ git clone 克隆一个本地库 $ git clone git@github.com:user-path/file
11.分支管理
	在版本回退里，每次提交，git都会把他们串成一条时间线，这条时间线就是一个分支.
	查看分支：$ git branch
	创建分支：$ git branch <name>
	切换分支：$ git checkout <name>
	创建加切换分支：$ git checkout -b <name>
	合并某分支到当前分支：$ git merge <name>
	删除某分支： $ git branch -d <name>
  1.解决冲突：当Git无法自动合并分支是，就必须首先解决冲突。解决冲突手，在提交，合并完成。
用$ git log -- graph 命令 可以看到分支合并图。
  2.$ git merge --no -ff -m "hhh" 表示禁用 Fast forward；
  3.分支策略： master分支是非常稳定的，也就是仅用来发布新版本，品势不能在上面干活；而干活都在Dev分支上，也就是说，Dev分支是不稳定的。
  4.BUG分支：
  5.feature分支：
  6.多人协作：
	

